//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.05.31 at 02:05:22 PM CEST 
//


package nl.b3p.imro._2006._1;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for BesluittypeType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="BesluittypeType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="artikel 19 besluit"/>
 *     &lt;enumeration value="besluit aanwijzing"/>
 *     &lt;enumeration value="goedkeuringsbesluit"/>
 *     &lt;enumeration value="uitspraak ABRS"/>
 *     &lt;enumeration value="uitspraak rechtbank"/>
 *     &lt;enumeration value="voorbereidingsbesluit"/>
 *     &lt;enumeration value="vrijstellingsbesluit"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "BesluittypeType")
@XmlEnum
public enum BesluittypeType {

    @XmlEnumValue("artikel 19 besluit")
    ARTIKEL_19_BESLUIT("artikel 19 besluit"),
    @XmlEnumValue("besluit aanwijzing")
    BESLUIT_AANWIJZING("besluit aanwijzing"),
    @XmlEnumValue("goedkeuringsbesluit")
    GOEDKEURINGSBESLUIT("goedkeuringsbesluit"),
    @XmlEnumValue("uitspraak ABRS")
    UITSPRAAK_ABRS("uitspraak ABRS"),
    @XmlEnumValue("uitspraak rechtbank")
    UITSPRAAK_RECHTBANK("uitspraak rechtbank"),
    @XmlEnumValue("voorbereidingsbesluit")
    VOORBEREIDINGSBESLUIT("voorbereidingsbesluit"),
    @XmlEnumValue("vrijstellingsbesluit")
    VRIJSTELLINGSBESLUIT("vrijstellingsbesluit");
    private final String value;

    BesluittypeType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static BesluittypeType fromValue(String v) {
        for (BesluittypeType c: BesluittypeType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
