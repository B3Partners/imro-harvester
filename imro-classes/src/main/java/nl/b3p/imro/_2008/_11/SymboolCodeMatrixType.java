//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.03.29 at 03:18:07 PM CEST 
//


package nl.b3p.imro._2008._11;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for SymboolCodeMatrixType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="SymboolCodeMatrixType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="s100"/>
 *     &lt;enumeration value="s101"/>
 *     &lt;enumeration value="s102"/>
 *     &lt;enumeration value="s103"/>
 *     &lt;enumeration value="s104"/>
 *     &lt;enumeration value="s105"/>
 *     &lt;enumeration value="s106"/>
 *     &lt;enumeration value="s107"/>
 *     &lt;enumeration value="s108"/>
 *     &lt;enumeration value="s109"/>
 *     &lt;enumeration value="s110"/>
 *     &lt;enumeration value="s111"/>
 *     &lt;enumeration value="s112"/>
 *     &lt;enumeration value="s113"/>
 *     &lt;enumeration value="s114"/>
 *     &lt;enumeration value="s115"/>
 *     &lt;enumeration value="s116"/>
 *     &lt;enumeration value="s117"/>
 *     &lt;enumeration value="s118"/>
 *     &lt;enumeration value="s119"/>
 *     &lt;enumeration value="s120"/>
 *     &lt;enumeration value="s121"/>
 *     &lt;enumeration value="s122"/>
 *     &lt;enumeration value="s123"/>
 *     &lt;enumeration value="s124"/>
 *     &lt;enumeration value="s125"/>
 *     &lt;enumeration value="s126"/>
 *     &lt;enumeration value="s127"/>
 *     &lt;enumeration value="s128a"/>
 *     &lt;enumeration value="s128b"/>
 *     &lt;enumeration value="s128c"/>
 *     &lt;enumeration value="s128d"/>
 *     &lt;enumeration value="s128e"/>
 *     &lt;enumeration value="s128f"/>
 *     &lt;enumeration value="s128g"/>
 *     &lt;enumeration value="s128h"/>
 *     &lt;enumeration value="s128i"/>
 *     &lt;enumeration value="s128j"/>
 *     &lt;enumeration value="s128k"/>
 *     &lt;enumeration value="s128l"/>
 *     &lt;enumeration value="s128m"/>
 *     &lt;enumeration value="s128n"/>
 *     &lt;enumeration value="s128o"/>
 *     &lt;enumeration value="s128p"/>
 *     &lt;enumeration value="s128q"/>
 *     &lt;enumeration value="s128r"/>
 *     &lt;enumeration value="s128s"/>
 *     &lt;enumeration value="s128t"/>
 *     &lt;enumeration value="s128u"/>
 *     &lt;enumeration value="s128v"/>
 *     &lt;enumeration value="s128w"/>
 *     &lt;enumeration value="s128x"/>
 *     &lt;enumeration value="s128y"/>
 *     &lt;enumeration value="s128z"/>
 *     &lt;enumeration value="s128aa"/>
 *     &lt;enumeration value="s128ab"/>
 *     &lt;enumeration value="s128ac"/>
 *     &lt;enumeration value="s128ad"/>
 *     &lt;enumeration value="s129a"/>
 *     &lt;enumeration value="s129b"/>
 *     &lt;enumeration value="s129c"/>
 *     &lt;enumeration value="s129d"/>
 *     &lt;enumeration value="s129e"/>
 *     &lt;enumeration value="s129f"/>
 *     &lt;enumeration value="s129g"/>
 *     &lt;enumeration value="s129h"/>
 *     &lt;enumeration value="s129i"/>
 *     &lt;enumeration value="s129j"/>
 *     &lt;enumeration value="s129k"/>
 *     &lt;enumeration value="s129l"/>
 *     &lt;enumeration value="s129m"/>
 *     &lt;enumeration value="s129n"/>
 *     &lt;enumeration value="s129o"/>
 *     &lt;enumeration value="s129p"/>
 *     &lt;enumeration value="s129q"/>
 *     &lt;enumeration value="s129r"/>
 *     &lt;enumeration value="s129s"/>
 *     &lt;enumeration value="s129t"/>
 *     &lt;enumeration value="s129u"/>
 *     &lt;enumeration value="s129v"/>
 *     &lt;enumeration value="s129w"/>
 *     &lt;enumeration value="s129x"/>
 *     &lt;enumeration value="s129y"/>
 *     &lt;enumeration value="s129z"/>
 *     &lt;enumeration value="s130a"/>
 *     &lt;enumeration value="s130b"/>
 *     &lt;enumeration value="s130c"/>
 *     &lt;enumeration value="s130d"/>
 *     &lt;enumeration value="s130e"/>
 *     &lt;enumeration value="s130f"/>
 *     &lt;enumeration value="s130g"/>
 *     &lt;enumeration value="s130h"/>
 *     &lt;enumeration value="s130i"/>
 *     &lt;enumeration value="s130j"/>
 *     &lt;enumeration value="s130k"/>
 *     &lt;enumeration value="s130l"/>
 *     &lt;enumeration value="s130m"/>
 *     &lt;enumeration value="s130n"/>
 *     &lt;enumeration value="s130o"/>
 *     &lt;enumeration value="s130p"/>
 *     &lt;enumeration value="s130q"/>
 *     &lt;enumeration value="s130r"/>
 *     &lt;enumeration value="s130s"/>
 *     &lt;enumeration value="s130t"/>
 *     &lt;enumeration value="s130u"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "SymboolCodeMatrixType")
@XmlEnum
public enum SymboolCodeMatrixType {

    @XmlEnumValue("s100")
    S_100("s100"),
    @XmlEnumValue("s101")
    S_101("s101"),
    @XmlEnumValue("s102")
    S_102("s102"),
    @XmlEnumValue("s103")
    S_103("s103"),
    @XmlEnumValue("s104")
    S_104("s104"),
    @XmlEnumValue("s105")
    S_105("s105"),
    @XmlEnumValue("s106")
    S_106("s106"),
    @XmlEnumValue("s107")
    S_107("s107"),
    @XmlEnumValue("s108")
    S_108("s108"),
    @XmlEnumValue("s109")
    S_109("s109"),
    @XmlEnumValue("s110")
    S_110("s110"),
    @XmlEnumValue("s111")
    S_111("s111"),
    @XmlEnumValue("s112")
    S_112("s112"),
    @XmlEnumValue("s113")
    S_113("s113"),
    @XmlEnumValue("s114")
    S_114("s114"),
    @XmlEnumValue("s115")
    S_115("s115"),
    @XmlEnumValue("s116")
    S_116("s116"),
    @XmlEnumValue("s117")
    S_117("s117"),
    @XmlEnumValue("s118")
    S_118("s118"),
    @XmlEnumValue("s119")
    S_119("s119"),
    @XmlEnumValue("s120")
    S_120("s120"),
    @XmlEnumValue("s121")
    S_121("s121"),
    @XmlEnumValue("s122")
    S_122("s122"),
    @XmlEnumValue("s123")
    S_123("s123"),
    @XmlEnumValue("s124")
    S_124("s124"),
    @XmlEnumValue("s125")
    S_125("s125"),
    @XmlEnumValue("s126")
    S_126("s126"),
    @XmlEnumValue("s127")
    S_127("s127"),
    @XmlEnumValue("s128a")
    S_128_A("s128a"),
    @XmlEnumValue("s128b")
    S_128_B("s128b"),
    @XmlEnumValue("s128c")
    S_128_C("s128c"),
    @XmlEnumValue("s128d")
    S_128_D("s128d"),
    @XmlEnumValue("s128e")
    S_128_E("s128e"),
    @XmlEnumValue("s128f")
    S_128_F("s128f"),
    @XmlEnumValue("s128g")
    S_128_G("s128g"),
    @XmlEnumValue("s128h")
    S_128_H("s128h"),
    @XmlEnumValue("s128i")
    S_128_I("s128i"),
    @XmlEnumValue("s128j")
    S_128_J("s128j"),
    @XmlEnumValue("s128k")
    S_128_K("s128k"),
    @XmlEnumValue("s128l")
    S_128_L("s128l"),
    @XmlEnumValue("s128m")
    S_128_M("s128m"),
    @XmlEnumValue("s128n")
    S_128_N("s128n"),
    @XmlEnumValue("s128o")
    S_128_O("s128o"),
    @XmlEnumValue("s128p")
    S_128_P("s128p"),
    @XmlEnumValue("s128q")
    S_128_Q("s128q"),
    @XmlEnumValue("s128r")
    S_128_R("s128r"),
    @XmlEnumValue("s128s")
    S_128_S("s128s"),
    @XmlEnumValue("s128t")
    S_128_T("s128t"),
    @XmlEnumValue("s128u")
    S_128_U("s128u"),
    @XmlEnumValue("s128v")
    S_128_V("s128v"),
    @XmlEnumValue("s128w")
    S_128_W("s128w"),
    @XmlEnumValue("s128x")
    S_128_X("s128x"),
    @XmlEnumValue("s128y")
    S_128_Y("s128y"),
    @XmlEnumValue("s128z")
    S_128_Z("s128z"),
    @XmlEnumValue("s128aa")
    S_128_AA("s128aa"),
    @XmlEnumValue("s128ab")
    S_128_AB("s128ab"),
    @XmlEnumValue("s128ac")
    S_128_AC("s128ac"),
    @XmlEnumValue("s128ad")
    S_128_AD("s128ad"),
    @XmlEnumValue("s129a")
    S_129_A("s129a"),
    @XmlEnumValue("s129b")
    S_129_B("s129b"),
    @XmlEnumValue("s129c")
    S_129_C("s129c"),
    @XmlEnumValue("s129d")
    S_129_D("s129d"),
    @XmlEnumValue("s129e")
    S_129_E("s129e"),
    @XmlEnumValue("s129f")
    S_129_F("s129f"),
    @XmlEnumValue("s129g")
    S_129_G("s129g"),
    @XmlEnumValue("s129h")
    S_129_H("s129h"),
    @XmlEnumValue("s129i")
    S_129_I("s129i"),
    @XmlEnumValue("s129j")
    S_129_J("s129j"),
    @XmlEnumValue("s129k")
    S_129_K("s129k"),
    @XmlEnumValue("s129l")
    S_129_L("s129l"),
    @XmlEnumValue("s129m")
    S_129_M("s129m"),
    @XmlEnumValue("s129n")
    S_129_N("s129n"),
    @XmlEnumValue("s129o")
    S_129_O("s129o"),
    @XmlEnumValue("s129p")
    S_129_P("s129p"),
    @XmlEnumValue("s129q")
    S_129_Q("s129q"),
    @XmlEnumValue("s129r")
    S_129_R("s129r"),
    @XmlEnumValue("s129s")
    S_129_S("s129s"),
    @XmlEnumValue("s129t")
    S_129_T("s129t"),
    @XmlEnumValue("s129u")
    S_129_U("s129u"),
    @XmlEnumValue("s129v")
    S_129_V("s129v"),
    @XmlEnumValue("s129w")
    S_129_W("s129w"),
    @XmlEnumValue("s129x")
    S_129_X("s129x"),
    @XmlEnumValue("s129y")
    S_129_Y("s129y"),
    @XmlEnumValue("s129z")
    S_129_Z("s129z"),
    @XmlEnumValue("s130a")
    S_130_A("s130a"),
    @XmlEnumValue("s130b")
    S_130_B("s130b"),
    @XmlEnumValue("s130c")
    S_130_C("s130c"),
    @XmlEnumValue("s130d")
    S_130_D("s130d"),
    @XmlEnumValue("s130e")
    S_130_E("s130e"),
    @XmlEnumValue("s130f")
    S_130_F("s130f"),
    @XmlEnumValue("s130g")
    S_130_G("s130g"),
    @XmlEnumValue("s130h")
    S_130_H("s130h"),
    @XmlEnumValue("s130i")
    S_130_I("s130i"),
    @XmlEnumValue("s130j")
    S_130_J("s130j"),
    @XmlEnumValue("s130k")
    S_130_K("s130k"),
    @XmlEnumValue("s130l")
    S_130_L("s130l"),
    @XmlEnumValue("s130m")
    S_130_M("s130m"),
    @XmlEnumValue("s130n")
    S_130_N("s130n"),
    @XmlEnumValue("s130o")
    S_130_O("s130o"),
    @XmlEnumValue("s130p")
    S_130_P("s130p"),
    @XmlEnumValue("s130q")
    S_130_Q("s130q"),
    @XmlEnumValue("s130r")
    S_130_R("s130r"),
    @XmlEnumValue("s130s")
    S_130_S("s130s"),
    @XmlEnumValue("s130t")
    S_130_T("s130t"),
    @XmlEnumValue("s130u")
    S_130_U("s130u");
    private final String value;

    SymboolCodeMatrixType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static SymboolCodeMatrixType fromValue(String v) {
        for (SymboolCodeMatrixType c: SymboolCodeMatrixType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
